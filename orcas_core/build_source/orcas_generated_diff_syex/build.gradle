apply plugin: 'java'

apply from: '../maven_publish.gradle'
project.ext.maven_artifactId_postfix = 'generated-syex'
project.ext.extensiondependent = true
project.ext.maven_description = 'orcas generated code (besides from xtext)'

configurations 
{
  generatorRunPath 
  {
  }
}

dependencies 
{
  generatorRunPath project(':orcas')
  generatorRunPath project(':orcas_syex')
  compile project(':orcas')
  compile project(':orcas_syex')
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
}

task(createGenDirs) 
{
  doFirst
  {
    new File("${buildDir}/srcgen/src/de/opitzconsulting/orcas/syex/trans").mkdirs();
    new File("${buildDir}/srcgen/src/de/opitzconsulting/orcas/syex/load").mkdirs();
    new File("${buildDir}/srcgen/src/de/opitzconsulting/orcas/syex/xml").mkdirs();
  }
  outputs.file "${buildDir}/srcgen"
}

task(generateTransformerJava, dependsOn: createGenDirs, type: JavaExec) 
{
  classpath configurations.generatorRunPath 

  main = "de.opitzconsulting.orcas.ot.JavaTransformerGenerator"
  args "${buildDir}/srcgen/src/de/opitzconsulting/orcas/syex/trans"
  args "orig"

  outputs.file args[0]
}

task(generateDataReader, dependsOn: createGenDirs, type: JavaExec) 
{
  classpath configurations.generatorRunPath 

  main = "de.opitzconsulting.orcas.ot.JavaDataReaderGenerator"
  args "${buildDir}/srcgen/src/de/opitzconsulting/orcas/syex/load"
  args "syex"

  outputs.file args[0]
}

task(generateDataWriter, dependsOn: createGenDirs, type: JavaExec) 
{
  classpath configurations.generatorRunPath 

  main = "de.opitzconsulting.orcas.ot.JavaDataWriterGenerator"
  args "${buildDir}/srcgen/src/de/opitzconsulting/orcas/syex/load"
  args "syex"

  outputs.file args[0]
}

task(generateXmlExport, dependsOn: createGenDirs, type: JavaExec) 
{
  classpath configurations.generatorRunPath 

  main = "de.opitzconsulting.orcas.ot.JavaXmlGenerator"
  args "${buildDir}/srcgen/src/de/opitzconsulting/orcas/syex/xml"
  args "syex"

  outputs.file args[0]
}

//compileJava.source "${buildDir}/srcgen"
compileJava.dependsOn generateTransformerJava, generateDataReader, generateDataWriter, generateXmlExport

sourceSets {
  main {
    java {
      srcDirs "${buildDir}/srcgen"
    }
  }
}


